.veracode_scan_common:
  stage: Veracode Scan
  interruptible: false
  needs: ["deploy_snapshot"]
  tags:
    - veracode-scan
  dependencies:
    - deploy_snapshot
  variables:
    APP_NAME: "Search Guard"   
    DOCKER_VERACODE: "veracode/api-wrapper-java:23.8.12.0.1" 
  image: ${DOCKER_VERACODE}
  before_script:
    - export JAVA_CMD="java -jar /opt/veracode/api-wrapper.jar
      -vid ${VERACODE_API_KEY_ID}
      -vkey ${VERACODE_API_KEY_SECRET}
      -action UploadAndScan
      -appname \"${APP_NAME}\"
      -filepath plugin/target/releases/search-guard-veracode.jar
      -maxretrycount 3
      -scantimeout 60
      -scanpollinginterval 60
      -toplevel true
      -scanallnonfataltoplevelmodules false
      -include \"*search-guard*\"
      -deleteincompletescan 1
      -createprofile \"false\""
      
# veracode_build:
#   stage: Veracode Scan
#   rules:
#     - if: '$VERACODE_SANDBOX_SCAN_ONLY || $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG =~ /^sg-.*/'
#       when: always
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#       when: manual
#       allow_failure: true #Prevents the pipeline from ending in a "Blocked" status.
#   needs: []
#   interruptible: true
#   tags:
#     - veracode-scan
#   script:
#     - mvn clean package -Pveracode-one-jar,dlic,enterprise -DskipTests
#   artifacts:
#     when: on_success
#     paths:
#       - "plugin/target/releases/search-guard-veracode.jar"
#     expire_in: 12h
#   cache:
#     key: mavenrepo-main-sg-classic
#     paths:
#       - .m2/repository   

veracode_sandbox_scan:
  extends: ['.veracode_scan_common']
  rules:
    - if: '$VERACODE_SANDBOX_SCAN_ONLY || $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule"'
  script:
    - |
      echo "SG_ES_PLUGIN=$SG_ES_PLUGIN"
      echo "pwd = $(pwd)"
      wget -O search-guard.zip $SG_ES_PLUGIN
      ls -lan search-guard.zip    
      APP_VERSION_SUFFIX="$(date "+%Y-%m-%d_%H:%M:%S")"
      case "$CI_PIPELINE_SOURCE" in
          "schedule")
              SANDBOX_NAME="schedule-sg-classic"
              APP_VERSION_PREFIX="$SANDBOX_NAME-ci-build-$CI_PIPELINE_ID"
              ;;
          "merge_request_event")
              SANDBOX_NAME="merge-request-sg-classic"
              APP_VERSION_PREFIX="ci-build-$CI_PIPELINE_ID-MR-$CI_MERGE_REQUEST_IID-$CI_MERGE_REQUEST_TITLE"
              ;;
          *)
              SANDBOX_NAME="manual-sg-classic"
              APP_VERSION_PREFIX="ci-build-$CI_PIPELINE_ID"
              ;;
      esac
      APP_VERSION="$APP_VERSION_PREFIX-$APP_VERSION_SUFFIX"    
      echo "Executing sandbox scan for $APP_NAME in sandbox $SANDBOX_NAME with version $APP_VERSION for CI event $CI_PIPELINE_SOURCE"
      export JAVA_CMD="$JAVA_CMD -version \"${APP_VERSION}\" -sandboxname \"${SANDBOX_NAME}\""
      eval $JAVA_CMD
    
veracode_release_scan:
  extends: ['.veracode_scan_common']
  rules:
    - if: '$CI_COMMIT_TAG =~ /^sg-.*/'
  script:
    - | 
      echo "Executing release scan for $APP_NAME with version $CI_COMMIT_TAG"
      export JAVA_CMD="$JAVA_CMD -version \"${CI_COMMIT_TAG}\""
      eval $JAVA_CMD         