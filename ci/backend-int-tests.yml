
community:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*community.*"

enterprise_1:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*enterprise_1.*"  

enterprise_2:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*enterprise_2.*"

enterprise_3:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*enterprise_3.*"

ccs_1:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*ccs_1.*"

ccs_2:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*ccs_2.*"

ccs_3:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*ccs_3.*"


compliance_1:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*compliance_1.*"

compliance_2:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*compliance_2.*"

compliance_3:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*compliance_3.*"

compliance_ccs:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*compliance_ccs.*"

signals_1:
  extends:
  - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*signals_1.*"

signals_2:
  extends:
    - .be_integration_test
  variables:
    TEST_DEFINITIONS: ".*signals_2.*"

.be_integration_test:
  allow_failure: false
  stage: "Backend Int Tests Core"
  tags:
    - test-large
  rules:
    - if: '$DOCKER_ONLY || $VERACODE_SANDBOX_SCAN_ONLY || $CI_COMMIT_MESSAGE =~ /.*SKIP-TESTS.*/ || $CI_COMMIT_MESSAGE =~ /.*SKIP-SGI.*/'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "schedule" || $CI_COMMIT_TAG =~ /^sg-flx-.*/ || $FORCE_SGI'
      when: always
  image: docker:${DOCKER_VERSION}
  services:
    - docker:${DOCKER_VERSION}-dind
  script:
    - |
       #apk update
       #apk add --no-cache gomplate jq curl zip xmlstarlet git wget bash sudo
       
       sudo sysctl -w vm.max_map_count=262144
       echo "SNAPSHOT_REVISION=$SNAPSHOT_REVISION"
       echo "TEST_DEFINITIONS $TEST_DEFINITIONS"
       echo "ES_VERSION: $ES_VERSION"
       MAJOR="$(echo $ES_VERSION | cut -d. -f1-2)"
       TEST_IT_BRANCH="${MAJOR}.x"
       echo "TEST_IT_BRANCH: $TEST_IT_BRANCH"
       git clone --depth 1 --branch $TEST_IT_BRANCH https://gitlab-ci-token:${CI_JOB_TOKEN}@git.floragunn.com/private/sgi8.git > /dev/null
       cd sgi8/server
       rm -f docker/elasticsearch/search-guard.zip
       cp -a ../../plugin/target/releases/search-guard-flx-elasticsearch-plugin-${SNAPSHOT_REVISION}.zip docker/elasticsearch/search-guard.zip
       ./run_test_definition.sh "$TEST_DEFINITIONS"
  artifacts:
    when: always
    paths:
      - sgi8/client/test/testresults**/**/*
    reports:
      junit:
        - "sgi8/client/test/testresults**/junit/Test*.xml"
    expire_in: 30 days
