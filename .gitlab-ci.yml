variables:
  SG_JAVA_BUILD_VERSION: "11"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode"
  DOCKER_DRIVER: overlay2
  #SG_KI_PLUGIN: ""
  #KI_VERSION: ""
  #IT_BRANCH: ""

image: maven:3.6-jdk-${SG_JAVA_BUILD_VERSION}


#cache:
#  key: "$CI_COMMIT_REF_SLUG"
#  paths:
#  - "sgbuild0/search-guard-suite-enterprise/m2repository" #path look like this because of mv we do below
#
before_script:
  - export SG_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f2|cut -d. -f2-)'.0'
  - export ES_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f4)

stages:
  - build
  - test
  - package
  - "Backend Int Tests Core"
  - "Backend Int Tests Features"
  - "Frontend Int Tests Core"
  - "Frontend Int Tests Features"
  - "Frontend Int Tests External Features"
  - "Frontend Compat Int Tests 1"
  - "Frontend Compat Int Tests 2"
  - Veracode Scan
  - release

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - when: always

build:
  stage: build
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^sg-.*/ || $VERACODE_SANDBOX_SCAN_ONLY'
      when: never
    - when: always
  tags:
    - build
  script:
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip.exec=true clean install
    - echo "Size of .m2/repository $(du -sm $CI_PROJECT_DIR/.m2/repository | awk '{print $1}') MB"
  artifacts:
    when: on_success
    paths:
      - "*/target"
      - ".m2/repository/com/floragunn/*"
    expire_in: 12h
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: push

build_for_tag_version:
  stage: build
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^sg-.*/'
  tags:
    - build
  before_script:
    - rm -rf /var/lib/apt/lists/* && apt-get update -yqq && apt-get install -yqq openssh-client apt-utils jq perl libapr1 openssl libxml2-utils curl uuid-runtime ftp gnupg2 pinentry-tty expect psmisc xmlstarlet apt-transport-https zip netcat xmlstarlet sudo > /dev/null
  script:
    - export SG_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f2|cut -d. -f2-)'.0'
    - export ES_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f4)
    - xmlstarlet ed --inplace -N a="http://maven.apache.org/POM/4.0.0" -u "/a:project/a:properties/a:sg-suite.version" -v $SG_VERSION pom.xml
    - xmlstarlet ed --inplace -N a="http://maven.apache.org/POM/4.0.0" -u "/a:project/a:properties/a:elasticsearch.version" -v $ES_VERSION pom.xml
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip.exec=true clean install
    - echo "Size of .m2/repository $(du -sm $CI_PROJECT_DIR/.m2/repository | awk '{print $1}') MB"
  artifacts:
    when: on_success
    paths:
      - "pom.xml"
      - "*/target"
      - ".m2/repository/com/floragunn/*"
    expire_in: 12h
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: push
  allow_failure: false



test_security:
  stage: test
  interruptible: true
  tags:
    - test
  script:
    - find .
    - mvn $MAVEN_CLI_OPTS -pl security test
  artifacts:
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: pull

test_signals:
  stage: test
  interruptible: true
  tags:
    - test
  script:
    - mvn $MAVEN_CLI_OPTS -pl signals test
  artifacts:
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: pull

test_scheduler:
  stage: test
  interruptible: true
  tags:
    - test
  script:
    - mvn $MAVEN_CLI_OPTS -pl scheduler test
  artifacts:
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: pull

test_support:
  stage: test
  interruptible: true
  tags:
    - test
  script:
    - mvn $MAVEN_CLI_OPTS -pl support test
  artifacts:
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: pull

test_dlic_security:
  stage: test
  interruptible: true
  tags:
    - aws-runner
  script:
    - mvn $MAVEN_CLI_OPTS -pl dlic-security test
  artifacts:
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: pull

test_dlic_signals:
  stage: test
  interruptible: true
  tags:
    - test
  script:
    - mvn $MAVEN_CLI_OPTS -pl dlic-signals test
  artifacts:
    when: always
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"
    expire_in: 1 week
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository
    policy: pull


deploy_snapshot:
  stage: package
  interruptible: true
  tags:
    - build
  needs:
    - job: build
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^sg-.*/ || $VERACODE_SANDBOX_SCAN_ONLY'
      when: never
    - when: always
  before_script:
    - rm -rf /var/lib/apt/lists/* && apt-get update -yqq && apt-get install -yqq openssh-client apt-utils jq perl libapr1 openssl libxml2-utils curl uuid-runtime ftp gnupg2 pinentry-tty expect psmisc xmlstarlet apt-transport-https zip netcat xmlstarlet sudo > /dev/null
  script:
    - |
      set -x
      mvn -Drevision=b-$CI_COMMIT_REF_NAME-SNAPSHOT $MAVEN_CLI_OPTS -DskipTests -s settings.xml deploy | tee deploy.out
      SG_ES_PLUGIN=`grep -E "Uploaded to .*: https://.*/search-guard-suite-plugin-.*[0-9]+.zip " deploy.out | grep -o "http.*zip"`
      SG_ADMIN=`grep -E "Uploaded to .*: https://.*/search-guard-suite-plugin-.*[0-9]+-sgadmin-standalone.zip " deploy.out | grep -o http.*zip`
      ES_VERSION=$(xmlstarlet sel -N my=http://maven.apache.org/POM/4.0.0 -t -m my:project -m my:properties -v my:elasticsearch.version pom.xml)
      MAJOR=$(echo $ES_VERSION | cut -d. -f1-2)
      if [ -z "$IT_BRANCH" ]; then
        if [[ "$CI_COMMIT_REF_NAME" != "master" ]] && [[ -n $(git ls-remote --heads https://gitlab-ci-token:${CI_JOB_TOKEN}@git.floragunn.com/private/search-guard-integration-tests.git $CI_COMMIT_REF_NAME) ]]; then
          IT_BRANCH="$CI_COMMIT_REF_NAME"
        else
          IT_BRANCH="$MAJOR.x"
        fi
      fi
      if [ -z "$KI_VERSION" ]; then
        KI_VERSION=$ES_VERSION
      fi
      if [[ ! "$SG_KI_PLUGIN" =~ ^https?:.*$ ]]; then
        if [[ "$SG_KI_PLUGIN" =~ .*SNAPSHOT.* ]]; then
          SG_KI_PLUGIN=$(ci/artifact_uri.sh search-guard-kibana-plugin-snapshot search-guard-kibana-plugin $SG_KI_PLUGIN .zip)
          echo "Found: $SG_KI_PLUGIN"
        else
          SG_KI_PLUGIN=$(ci/artifact_uri.sh search-guard-kibana-plugin-release search-guard-kibana-plugin $SG_KI_PLUGIN .zip)
          echo "Found: $SG_KI_PLUGIN"
        fi
      fi
      echo "SG_ES_PLUGIN=$SG_ES_PLUGIN" >> build.env
      echo "SG_ADMIN=$SG_ADMIN" >> build.env
      echo "ES_VERSION=$ES_VERSION" >>build.env
      echo "SG_KI_PLUGIN=$SG_KI_PLUGIN" >>build.env
      echo "KI_VERSION=$KI_VERSION" >>build.env
      echo "IT_BRANCH=$IT_BRANCH" >>build.env
      cat build.env
  artifacts:
    when: on_success
#    paths:
#      - "plugin/target"
#      - "environment.env"
    expire_in: 10d
    reports:
      dotenv: build.env
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository

deploy_staging:
  stage: package
  interruptible: true
  rules:
    - if: '$VERACODE_SANDBOX_SCAN_ONLY'
      when: never    
    - if: '$CI_COMMIT_TAG =~ /^sg-.*/'
  before_script:
    - rm -rf /var/lib/apt/lists/* && apt-get update -yqq && apt-get install -yqq openssh-client apt-utils jq perl libapr1 openssl libxml2-utils curl uuid-runtime ftp gnupg2 pinentry-tty expect psmisc xmlstarlet apt-transport-https zip netcat xmlstarlet sudo > /dev/null
  tags:
    - build
  script:
    - |
      ./dev/setup_gpg.sh
      SG_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f2|cut -d. -f2-)'.0'
      ES_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f4)
      MAJOR=$(echo $ES_VERSION | cut -d. -f1-2)
      echo "Deploying Release to Staging repo"
      mvn clean deploy -s settings.xml -DaltDeploymentRepository=staging::default::https://maven.search-guard.com:443/search-guard-suite-staging -DskipTests -B -Penterprise -Prelease -Drevision=$ES_VERSION-$SG_VERSION | tee deploy.out
      SG_ES_PLUGIN_URI=`grep -E "Uploaded to .*: https://.*/search-guard-suite-plugin-.*[0-9]+.zip " deploy.out | grep -o "http.*zip"`
      SG_ADMIN_URI=`grep -E "Uploaded to .*: https://.*/search-guard-suite-plugin-.*[0-9]+-sgadmin-standalone.zip " deploy.out | grep -o http.*zip`      
      if [ -z "$IT_BRANCH" ]; then
        if [ "$CI_COMMIT_REF_NAME" != "master" ] && [ -n $(git ls-remote --heads git@git.floragunn.com:private/search-guard-integration-tests.git $CI_COMMIT_REF_NAME) ]; then
          IT_BRANCH="$CI_COMMIT_REF_NAME"
        else
          IT_BRANCH="$MAJOR.x"
        fi
      fi
      echo "SG_ES_PLUGIN=$SG_ES_PLUGIN_URI" >> build.env
      echo "SG_ADMIN=$SG_ADMIN_URI" >> build.env
      echo "ES_VERSION=$ES_VERSION" >>build.env
      echo "SG_KI_PLUGIN_URI=$SG_KI_PLUGIN_URI" >>build.env
      echo "KI_VERSION=$KI_VERSION" >>build.env
      echo "IT_BRANCH=$IT_BRANCH" >>build.env
      cat build.env
  artifacts:
    when: on_success
#    paths:
#      - "plugin/target"
#      - "environment.env"
    expire_in: 10d
    reports:
      dotenv: build.env
  cache:
    key: mavenrepo-main-sg-classic
    paths:
      - .m2/repository

include:
  - local: '.gitlab-ci-branch-specific.yml'
  - local: 'ci/backend-int-tests.yml'
  - local: 'ci/backend-int-tests-features.yml'
  - local: 'ci/frontend-int-tests.yml'
  - local: 'ci/frontend-int-tests-features.yml'
  - local: 'ci/frontend-int-tests-external-features.yml'
  - local: 'ci/veracode-scan.yml'  

deploy_release:
  stage: release
  rules:
    - if: '$VERACODE_SANDBOX_SCAN_ONLY'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^sg-.*/'
  before_script:
    - rm -rf /var/lib/apt/lists/* && apt-get update -yqq && apt-get install -yqq openssh-client apt-utils jq perl libapr1 openssl libxml2-utils curl uuid-runtime ftp gnupg2 pinentry-tty expect psmisc xmlstarlet apt-transport-https zip netcat xmlstarlet sudo > /dev/null
  tags:
    - release
  script:
    - ./dev/setup_gpg.sh
    - |
      export SG_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f2|cut -d. -f2-)'.0'
      export ES_VERSION=$(echo $CI_COMMIT_TAG | cut -d- -f4)
      export MAJOR=$(echo $ES_VERSION | cut -d. -f1-2)

      echo "Removing current release from Staging"
      curl -u "$ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD" -X DELETE "https://maven.search-guard.com/artifactory/search-guard-suite-staging/com/floragunn/search-guard-suite-signals/$ES_VERSION-$SG_VERSION" || true

      cd search-guard-integration-tests
      git tag $CI_COMMIT_TAG || true
      echo "Tag created in int repo"
      git show-ref $CI_COMMIT_TAG
      git push --tags || true
      cd ..
      echo "Deploying Release to Production repo."
      mvn deploy -s settings.xml -DskipTests -B -Penterprise -Prelease -Delasticsearch.version=$ES_VERSION -Dsg-suite.version=$SG_VERSION || exit 1
  allow_failure: false


